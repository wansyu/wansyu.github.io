[{"title":"给Aria2添加科学上网","path":"/2023/12/10/aria2proxy/","content":"在AriaNG的HTTP设置中添加科学上网配置只能临时生效，要保证永久生效需要在config目录中找到并编辑aria2.conf文件，在文件中的任意位置添加下面的配置，按实际情况修改地址，确保地址为aria2c能访问得到的地址。 12# proxyall-proxy=http://127.0.0.1:7890 如果有用户密码认证则为 12# proxyall-proxy=http://&lt;用户名&gt;:&lt;密码&gt;@127.0.0.1:7890","tags":["docker"],"categories":["docker"]},{"title":"在极空间安装Syncthing","path":"/2023/12/10/synthingonzspace/","content":"需求来源 极空间与其他NAS同步； 想使用Host网络以支持IPv6但极空间已经占用8384端口； 常用的版本linuxserver&#x2F;syncthing或syncthing&#x2F;syncthing不支持修改端口。 修改镜像配置文件以支持自定义端口下载源码，修改文件\\root\\etc\\s6-overlay\\s6-rc.d\\svc-syncthing\\run如下 12345exec \\ s6-notifyoncheck -d -n 300 -w 1000 -c &quot;nc -z localhost $&#123;PORT&#125;&quot; \\ s6-setuidgid abc syncthing \\ -home=/config -no-browser -no-restart \\ --gui-address=&quot;0.0.0.0:$&#123;PORT&#125;&quot; 修改文件Dockerfile如下： 12ENV PORT=8384EXPOSE $&#123;PORT&#125; 22000/tcp 22000/udp 21027/UDP 部署上述修改的镜像已经上传Docker Hub，部署只需要拉取镜像： 1wansyu/syncthing:latest 按照linuxserver&#x2F;syncthing的教程部署，并修改PORT为目标端口。 其他问题部署在极空间上的Syncthing（无论修改版本或者linuxserver等版本）可能出现权限问题，解决方法如下： （推荐）修改PUID=1000，PGID=1000，进入容器的SSH，命令/bin/bash，用户root, 执行ls -l，列出所有文件夹，找到权限为root的同步文件夹，以BackupSync为例，执行chown -R abc:abc BackupSync，再次执行ls -l，看到权限变为abc。 （不推荐）修改PUID=0，PGID=0，会破坏权限管理。","tags":["docker"],"categories":["docker"]},{"title":"绿联nas部署campus-imaotai教程","path":"/2023/12/08/imt/","content":"部署前准备 已经安装有Portainer等支持docker compose部署的工具。 从项目官方下载好配置文件，并放置于绿联nas的docker目录中，假设目录名为CampusIMT。 获取自己的硬盘 uuid（32位字母数字和4个 - ）和用户 uid（5位数字），可在ssh中用查找CampusIMT或Portainer中查看任意之前有映射目录的容器确定。 （可选）在绿联的docker管理界面下载以下四个镜像：1234wansyu/campus-mysql:latestwansyu/campus-redis:latestwansyu/campus-nginx:latestwansyu/campus-server:latest 正式部署在Portainer中Add Stack（添加堆栈），输入任意名称，并在Web editor（Web编辑器）粘贴以下内容，注意修改自己的&lt;uuid&gt;和&lt;uid&gt;，然后点击Deploy the Stack（部署堆栈），若进行了上述的步骤4，则可以马上看到部署成功，否则需等待下载完成。在Stack Detail中可以看到四个正在运行的容器。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475version : &#x27;3&#x27;networks: campus_net: driver: bridge services: campus-mysql: container_name: campus-mysql image: wansyu/campus-mysql:latest ports: - &quot;13306:3306&quot; volumes: - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/mysql/conf:/etc/mysql/conf.d - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/mysql/logs:/logs - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/mysql/data:/var/lib/mysql command: [ &#x27;mysqld&#x27;, &#x27;--innodb-buffer-pool-size=80M&#x27;, &#x27;--character-set-server=utf8mb4&#x27;, &#x27;--collation-server=utf8mb4_unicode_ci&#x27;, &#x27;--default-time-zone=+8:00&#x27;, &#x27;--lower-case-table-names=1&#x27; ] environment: WAIT_HOSTS: campus-mysql:3306 MYSQL_DATABASE: &#x27;campus_imaotai&#x27; MYSQL_ROOT_PASSWORD: oddfar_imaotai networks: - campus_net restart: always campus-redis: container_name: campus-redis image: wansyu/campus-redis:latest ports: - &quot;16379:6379&quot; volumes: - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/conf/redis.conf:/home/campus/redis/redis.conf - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/redis/data:/data command: redis-server /home/campus/redis/redis.conf networks: - campus_net restart: always campus-nginx: container_name: campus-nginx image: wansyu/campus-nginx:latest ports: - &quot;80:80&quot; volumes: - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/html/dist:/home/campus/projects/campus-ui - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/conf/nginx.conf:/etc/nginx/nginx.conf - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/nginx/logs:/var/log/nginx - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/nginx/conf.d:/etc/nginx/conf.d depends_on: - campus-server networks: - campus_net restart: always campus-server: container_name: campus-server image: wansyu/campus-server:latest ports: - &quot;8160:8160&quot; volumes: - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/campus/logs:/home/campus/logs - /mnt/media_rw/&lt;uuid&gt;/.ugreen_nas/&lt;uid&gt;/Docker/CampusIMT/campus/uploadPath:/home/campus/uploadPath depends_on: - campus-mysql - campus-redis environment: - TZ=Asia/Shanghai networks: - campus_net restart: always","tags":["docker"],"categories":["docker"]},{"title":"Hello World","path":"/2023/11/12/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]